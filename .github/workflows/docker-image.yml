name: Docker Conda Base Image CI

on:
  push:
    branches: [main]
    #   - "!*"
    # tags:
    #   - "v*"

jobs:
  build_and_push:
    runs-on: ubuntu-latest
    steps:
      - name: Make build space
      - run: |
          sudo rm -rf /usr/local/lib/android
          sudo rm -rf /usr/share/dotnet
          sudo apt-get clean -y
          sudo apt-get autoremove -y

      - name: Checkout repository
        uses: actions/checkout@v2

      - name: GitHub tag
        uses: mathieudutour/github-tag-action@v6.0
        id: tag_version
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          release_branches: main
          create_annotated_tag: false
          fetch_all_tags: true

      - name: Create a GitHub release
        uses: ncipollo/release-action@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          tag: ${{ steps.tag_version.outputs.new_tag }}
          name: Release ${{ steps.tag_version.outputs.new_tag }}
          body: ${{ steps.tag_version.outputs.changelog }}
          generateReleaseNotes: true

      - name: Assign environment variables
        run: |
          echo "image_build_date=$(date -u +'%Y-%m-%dT%H:%M:%SZ')" >> $GITHUB_ENV

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker buildx
        id: buildx
        uses: docker/setup-buildx-action@v1
        with:
          install: true
          driver: docker-container
          driver-opts: |
            image=moby/buildkit:master
          buildkitd-flags: --debug
          config-inline: |
            [worker.oci]
              max-parallelism = 1

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
          username: ${{ secrets.DOCKER_HUB_USERNAME }}

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          no-cache: true
          # cache-from: type=gha
          # cache-to: type=gha,mode=max
          context: ./build/debian
          file: ./build/debian/Dockerfile
          platforms: linux/arm64,linux/amd64
          push: true
          build-args: |
            IMAGE_CREATED=${{ env.image_build_date }}
            IMAGE_VERSION=${{ steps.tag_version.outputs.new_tag }}
          tags: |
            ${{ secrets.DOCKER_HUB_USERNAME }}/conda_base:latest
            ${{ secrets.DOCKER_HUB_USERNAME }}/conda_base:${{ steps.tag_version.outputs.new_tag }}
            ghcr.io/${{ github.repository_owner }}/conda_base:latest
            ghcr.io/${{ github.repository_owner }}/conda_base:${{ steps.tag_version.outputs.new_tag }}
          target: conda_base_debian

      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}
